{"version":3,"sources":["Filter.jsx","PersonForm.jsx","Person.jsx","Persons.jsx","axiosUtils.js","App.jsx","index.js"],"names":["Filter","handleChange","type","name","onChange","PersonForm","handleSubmit","newName","newNumber","onSubmit","value","Person","person","number","id","handleDestroy","onClick","window","confirm","Persons","filteredList","map","key","baseUrl","App","useState","persons","setPersons","setNewName","setNewNumber","filter","setFilter","message","notification","setNotification","e","target","filteringValue","toLowerCase","handleNotification","setTimeout","useEffect","a","axios","get","then","response","data","toLocaleLowerCase","includes","className","preventDefault","payload","newObject","personWithNameId","find","newPerson","length","newPersonsArray","put","_","catch","_err","post","delete","destroy","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0b849937.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Filter({ handleChange }) {\n  return <input type=\"text\" name=\"filter\" onChange={handleChange} />;\n}\n\nexport default Filter;\n","import React from \"react\";\n\nfunction PersonForm({ handleSubmit, handleChange, newName, newNumber }) {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input onChange={handleChange} name=\"name\" value={newName} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input onChange={handleChange} name=\"number\" value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n}\n\nexport default PersonForm;\n","import React from \"react\";\n\nfunction Person({ person: { name, number, id }, handleDestroy }) {\n  function handleClick() {\n    if (window.confirm(`Delete ${name}?`)) {\n      return handleDestroy(id);\n    }\n  }\n\n  return (\n    <div>\n      {id}. {name}: {number}\n      <button onClick={handleClick}>Delete</button>\n    </div>\n  );\n}\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nfunction Persons({ filteredList, handleDestroy }) {\n  return filteredList.map((person) => {\n    return (\n      <Person key={person.name} person={person} handleDestroy={handleDestroy} />\n    );\n  });\n}\n\nexport default Persons;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nexport const getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nexport const create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nexport const destroy = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport const update = (id, payload) => {\n  const request = axios.put(`${baseUrl}/${id}`, payload);\n  return request.then((response) => response.data);\n};\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./Filter\";\nimport PersonForm from \"./PersonForm\";\nimport Persons from \"./Persons\";\nimport { getAll, create, destroy, update } from \"./axiosUtils\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState({ type: \"\", message: \"\" });\n\n  useEffect(() => {\n    (async () => {\n      const persons = await getAll();\n      setPersons(persons);\n    })();\n  }, []);\n\n  function handleChange(e) {\n    if (e.target.name === \"name\") {\n      setNewName(e.target.value);\n    } else if (e.target.name === \"number\") {\n      setNewNumber(e.target.value);\n    } else if (e.target.name === \"filter\") {\n      const filteringValue = e.target.value.toLowerCase();\n\n      setFilter(filteringValue);\n    } else {\n      return;\n    }\n  }\n\n  function handleNotification(type, message) {\n    setNotification({ type, message });\n\n    setTimeout(() => {\n      setNotification({ type: \"\", message: \"\" });\n    }, 5000);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const personWithNameId = persons.find((person) => person.name === newName);\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1,\n    };\n\n    if (!personWithNameId) {\n      create(newPerson)\n        .then(setPersons([...persons, newPerson]))\n        .then((_) =>\n          handleNotification(\"success\", `${newName} was successfully added`)\n        )\n        .catch((_err) =>\n          handleNotification(\n            \"error\",\n            `Information of ${newName} has already been removed from server`\n          )\n        );\n    } else if (\n      window.confirm(\n        `${newName} is already added to the phonebook, replace the old number iwth a new one`\n      )\n    ) {\n      const newPersonsArray = persons.map((person) =>\n        person.name === newName ? { ...person, number: newNumber } : person\n      );\n      update(personWithNameId.id, newPerson)\n        .then(setPersons(newPersonsArray))\n        .then((_) =>\n          handleNotification(\"success\", `${newName} was successfully modified`)\n        )\n        .catch((_err) =>\n          handleNotification(\n            \"error\",\n            `Information of ${newName} has already been removed from server`\n          )\n        );\n    }\n    resetForm();\n  }\n\n  function resetForm() {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  }\n\n  function handleDestroy(id) {\n    setPersons(persons.filter((person) => person.id !== id));\n    destroy(id);\n  }\n\n  const filteredList = persons.filter((person) =>\n    person.name.toLocaleLowerCase().includes(filter)\n  );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {notification.message && (\n        <div className={notification.type}>{notification.message}</div>\n      )}\n      <Filter handleChange={handleChange} />\n      <h4>Add a new</h4>\n      <PersonForm\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons filteredList={filteredList} handleDestroy={handleDestroy} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}